<?php

/**
 * Special
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##Er.kundal## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
class Special extends BaseSpecial
{


    /**
     *  @return mixed special content array or false if doesn't exists!
     */
    public static function getSpecialContent()
    {

        $retVal = self::checkSpecialContent() ;

        if($retVal) {
            # create object of previous data

            // $special = Doctrine_Core::getTable("Special")->findOneBy( "id" , $retVal)->toArray() ;
            $special = Doctrine_Query::create()->select()->from("Special")->where( 'id='.$retVal.'')->fetchArray();
            return $special ;
        }

    return false ;

    }

    /**
    *
    * @param array request array  saving special
    * @return integer id
    */
    public static function update($params)
    {

    $retVal = self::checkSpecialContent() ;

    # check if it has integer id of footer

    if($retVal) {

        # create object of previous data
        $special = Doctrine_Core::getTable("Special")->find($retVal) ;
    } else {
        # new object
        $special = new Special() ;


    }

    $special->title = $params['title'];
    $special->status = @$params['status'] ? 1 : 0 ;
    $special->save();


    //call cache function
    FrontEnd_Helper_viewHelper::clearCacheByKeyOrAll('all_homespecial_list');

    if(! $retVal) {
    self::newSpecialSetting($special->id);
    }

    return $special->id ;

    }

    /**
    * check special is exist or not
    * by geetings its setting value
    * @return mixed setting value or false
    */
    public static function checkSpecialContent()
    {
    return Settings::getSettings( Settings::SPECIAL ) ;
    }


    /**
    *  save new special settings
        *  @param $id integer special id
        */
    public static function newSpecialSetting($id)
    {

        $settings =  new Settings();
        $settings->name =  Settings::SPECIAL ;
        $settings->value = $id ;
        $settings->save();
        //call cache function
        FrontEnd_Helper_viewHelper::clearCacheByKeyOrAll('all_homespecial_list');
    }
}
