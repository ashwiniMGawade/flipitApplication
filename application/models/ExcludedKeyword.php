<?php

/**
 * ExcludedKeyword
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
class ExcludedKeyword extends BaseExcludedKeyword
{
	/**
	 * add new keyword
	 * @param posted form data
	 * @author blal
	 * @version 1.0
	 */
	public static function addKeywords($params)
	{
		$data = new ExcludedKeyword();
		$data->keyword = BackEnd_Helper_viewHelper::stripSlashesFromString( $params['keyword']);
		$data->action = BackEnd_Helper_viewHelper::stripSlashesFromString($params['actionType']);		
		$data->url = BackEnd_Helper_viewHelper::stripSlashesFromString($params['redirectTo']);
		$data->save();
	    
		if($params['actionType'] == 1){ 
			
			//split value by comman (,) 
			$splitedVal = explode(',',$params['selectedShopForSearchbar']) ;
			//get hidden value from posted form	
			
		 	foreach ($splitedVal as $sp) {
					//find shop by name from shop table
 					$relKeyWords =  new RefExcludedkeywordShop();
 					//add value in array by index
 					$relKeyWords->keywordid = $data->id;//get last inserted keyword id
 					$relKeyWords->shopid = $sp;
 					$relKeyWords->keywordname  =  BackEnd_Helper_viewHelper::stripSlashesFromString($params['keyword']);
 					$relKeyWords->save();
 					
		 	}
		}
		//call cache function
		FrontEnd_Helper_viewHelper::clearCacheByKeyOrAll('all_excludedkeyword_list');
		//die('out');
		
	}
	/**
	 * getkeywordList fetch all record from database table shop
	 * @param $params
	 * @return array
	 * @author blal
	 * @version 1.0
	 */
	public static function getKeywordList($params)
	{
		
	    $keywordList = Doctrine_Query::create ()
	                           ->select ('e.keyword as keyword,e.action as action,e.created_at as created_at')
	                           ->from ( "ExcludedKeyword as e" )
	                           ->orderBy("e.keyword ASC");
	                           
	   $list = DataTable_Helper::generateDataTableResponse($keywordList,
					$params,array("__identifier" => 'e.id','e.id','keyword','action','created_at'), 
			        array(),array());
	
	   return $list;
	}
	
	/**
	 * @author blal
	 * @param $id
	 * @return keywordDetail
	 */
	public static function getKeywordForEdit($id)
	{
		
		$getdata = Doctrine_Query::create()
		                       ->select("k.*,es.id as keywordid,s.id as sid , s.name as name")
		                       ->from("ExcludedKeyword as k")
		                       ->leftJoin('k.shops es')
		                       ->leftJoin('es.shopsofKeyword s')
		                       ->where("k.id =".$id)
		                       ->fetchArray();
		//echo "<pre>"; print_r($getdata); die;
		return $getdata;
	}
	
	/**
	 * @author blal
	 * @param $id
	 * @return updated keyword details
	 * 
	 */
	public static function updateKeyword($params)
	{
		//echo $params['actionType'];
		
		 //echo $params['actionType'] == "connect"  ? 1 : 0 ;
		// die();
		 $data = Doctrine_Core::getTable('ExcludedKeyword')
		 ->find($params['id']);
 	     $data->keyword = BackEnd_Helper_viewHelper::stripSlashesFromString($params["keyword"]);
 	     $data->action = BackEnd_Helper_viewHelper::stripSlashesFromString($params['actionType']);
 	      if(isset($params['redirectTo']) && $params['redirectTo']!=""){
 	      	
 	     	$data->url = BackEnd_Helper_viewHelper::stripSlashesFromString($params['redirectTo']);
 	     }
 	     $a = $data->save();
 	     
 	    if($params['actionType'] == 1){ 
 	    	//die('HI');
 	    $splitedVal = explode(',',$params['selectedShopForSearchbar']);
 	    
 	    $del = Doctrine_Query::create()->delete()
 	                            ->from('RefExcludedkeywordShop')
 	                            ->where('keywordid='.$params['id'])
 	                            ->execute();
 	    foreach ($splitedVal as $sp){
					//find shop by name from shop table
 					$relKeyWords =  new RefExcludedkeywordShop();
 					//add value in array by index
 					$relKeyWords->keywordid = $data->id;//get last inserted keyword id
 					$relKeyWords->shopid = $sp;
 					$relKeyWords->keywordname  =  BackEnd_Helper_viewHelper::stripSlashesFromString($params['keyword']);
 					$relKeyWords->save();
		 	}
 	    }else {
 	    	
 	    	Doctrine_Query::create()->delete()->from('RefExcludedkeywordShop')->where('keywordid='.$params['id'])->execute();
 	    	 
 	    }
 	    //call cache function
 	    FrontEnd_Helper_viewHelper::clearCacheByKeyOrAll('all_excludedkeyword_list');
}
	
 	/**
 	 * get list of excluded keywords for export
 	 * @author blal
 	 * @return array $keywordList
 	 * @version 1.0
 	 */
	public static function exportKeywordList() 
	{
		
	   $keywordList = Doctrine_Query::create()
	                             ->select('e.*')
		                         ->from("ExcludedKeyword e")
		                         ->orderBy("e.id DESC")
		                         ->fetchArray();
	   return $keywordList;
	
	}
	
	/**
	 * deleted record parmanetly from database.
	 * @param $id
	 * @author blal 
	 * @version 1.0
	 */
	public static function deleteKeyword($id)
	{
		$searchbarDel = Doctrine_Core::getTable('ExcludedKeyword')->find($id);
	    $q = Doctrine_Query::create()->delete()
	                                 ->from('ExcludedKeyword e')
	                                 ->where("e.id=" . $id)
	                                 ->execute();
	 }

	  /**
	   * Search shops and shows in autocomplete 
	   * @param string $keyword
	   * @return array $data
	   * @author blal
	   * @version 1.0
	   */
	  public static function searchShops($keyword,$selectedShop) 
	  {
	  	$SP = $selectedShop!='' ? $selectedShop: 0;
	  	//$ArSP =  explode(',', $SP);
	  	$data = Doctrine_Query::create()->select('s.name as name,s.id as id')
				                        ->from("Shop s")
				                        ->where('s.deleted=0')
				                        ->andWhere("s.id NOT IN ($SP)")
				                        ->andWhere("s.name LIKE ?", "$keyword%")
				                        ->orderBy("s.name ASC")
				                        ->fetchArray();
	  	
		return $data;
	}
	
	public static function checkStoreExistOrNot($id)
	  {
	  	
	  	//$Shop = Doctrine_query::create()->from('Shop')
	  	//->where('name=' . "'$name'")->limit(1)->fetchArray();
	  	$Shop = Doctrine_Core::getTable('Shop')->find($id);
	  	$flag = 0;
	  	if ($Shop) {
	  		$flag = $id;
	  	}
	  	return $flag;
	  }
	  
	  /**
	   * @author Raman
	   * @param $keyword
	   * @return keywordDetail
	   */
	  public static function getKeywordForFront($keywordForSearch)
	  {
	  	
	  	$getdata = Doctrine_Query::create()
	  	->select("k.*,es.id as keywordid,s.id as sid , s.name as name")
	  	->from("ExcludedKeyword k")
	  	->leftJoin('k.shops es')
	  	->leftJoin('es.shopsofKeyword s')
	  	->where("k.keyword = ?", $keywordForSearch)
	  	->fetchArray();
	  	return $getdata;
	  }
	  
	  /**
	   * Get the excluded keywords list for redirection
	   * @return array
	   * @author Raman
	   * @version 1.0
	   */
	  public static function getExRedirectKeywordsList()
	  {
	  
	  	$keywordList = Doctrine_Query::create()
	  	->select ('e.keyword as keyword')
	  	->from ( "ExcludedKeyword as e" )
	  	->where("e.action = '0'")
	  	->fetchArray();
	  	$newArray = array();
	  	
	  	foreach($keywordList as $keys):
	  		
	  		$newArray[] = $keys['keyword'];
	  		
	  	endforeach;
	  	return $newArray;
	  }
}