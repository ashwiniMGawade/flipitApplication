<?php

/**
 * PopularArticles
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */

class PopularArticles extends BasePopularArticles
{
    public static function saveArticles($articlesList, $changedArticlesDataForSorting, $flag = true)
    {
        foreach ($articlesList as $article) {
            if (!in_array($article['id'], $changedArticlesDataForSorting)) {
                $position = intval(self::getMaxPosition() + 1);
                self::savePopularArticle($article['id'], $position);
            }
        }
        if ($flag) {
            self::clearCacheOfArticles();
        } else {
            array_map('unlink', glob(PUBLIC_PATH.'tmp/*'));
        }
        return true;
    }

    public static function savePopularArticle($articleId, $position)
    {
        $popularArticle = new PopularArticles();
        $popularArticle->articleId = $articleId;
        $popularArticle->position = $position;
        $popularArticle->save();
        return;
    }

    public static function getMaxPosition()
    {
        $maxPosition = Doctrine_Query::create()
            ->select('p.position')
            ->from('PopularArticles p')
            ->orderBy('p.position DESC')->limit(1)->fetchArray();
        if (!empty($maxPosition)) {
            $position = $maxPosition[0]['position'];
        } else {
            $position =  0 ;
        }
        return $position;
    }

    public static function changeArticlesDataForSorting($popularArticles)
    {
        $changedPopularArticles = array();
        foreach ($popularArticles as $article) {
            $changedPopularArticles[] = $article['articles']['id'];
        }
        return $changedPopularArticles;
    }

    public static function savePopularArticlePosition($articleIds)
    {
        if (!empty($articleIds)) {
            $databaseConnection = Doctrine_Manager::getInstance()->getConnection('doctrine_site')->getDbh();
            $databaseConnection->query('SET FOREIGN_KEY_CHECKS = 0;');
            $databaseConnection->query('TRUNCATE TABLE popular_articles');
            $databaseConnection->query('SET FOREIGN_KEY_CHECKS = 1;');
            unset($databaseConnection);
            $articleIds = explode(',', $articleIds);
            $i = 1;
            foreach ($articleIds as $articleId) {
                self::savePopularArticle($articleId, $i);
                $i++;
            }
        }
        self::clearCacheOfArticles();
    }

    public static function getPopularArticles()
    {
        $currentDateTime = date('Y-m-d 00:00:00');
        $popularArticles = Doctrine_Query::create()
            ->select('p.id, a.title, p.position, p.articleId')
            ->from('PopularArticles p')
            ->leftJoin('p.articles a')
            ->where('a.publish = "1"')
            ->andWhere("a.deleted= 0")
            ->andWhere('a.publishdate <="'.$currentDateTime.'"')
            ->orderBy('p.position ASC')
            ->fetchArray();
        return $popularArticles;
    }

    public static function clearCacheOfArticles()
    {
        FrontEnd_Helper_viewHelper::clearCacheByKeyOrAll('all_moneySaving_list');
        FrontEnd_Helper_viewHelper::clearCacheByKeyOrAll('all_homemanisaving_list');
        FrontEnd_Helper_viewHelper::clearCacheByKeyOrAll('all_categoriesArticles_list');
        FrontEnd_Helper_viewHelper::clearCacheByKeyOrAll('all_homemanisaving_list');
    }
}
