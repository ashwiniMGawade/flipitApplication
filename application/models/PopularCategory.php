<?php

/**
 * PopularCategory
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##Er.kundal## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7691  2011-02-04 15:43:29Z jwage $
 */
class PopularCategory extends BasePopularCategory
{


    public static function searchTopTenPopulerCategory($status="" , $keyword, $flag)
    {
        $lastdata=self :: getPopularCategories();

        if(sizeof($lastdata)>0){
            for($i=0;$i<sizeof($lastdata);$i++){
                $shopdata[$i]=$lastdata[$i]['categoryId'];
            }

            $shopvalues = implode(",", $shopdata);

        }else{
            $shopvalues = '0';
        }


        $data = Doctrine_Query::create()->select('o.name as categoryname')
        ->from("Category o")->where('o.deleted=' . "'$flag'")
        ->andWhere('o.status=' . "'$status'")
        ->andWhere("o.name LIKE ?", "$keyword%")
        ->andWhere("o.id NOT IN ($shopvalues)")
        ->orderBy("o.name ASC")->limit(10)->fetchArray();
        return $data;
    }


    /**
     * get popular offer for Category list from database
     * @author Er.Kundal
     * @version 1.0
     * @return array $data
     */
    public static function getPopularCategories()
    {
        $data = Doctrine_Query::create()
        ->select('p.id,o.name,p.type,p.position,p.categoryId')
        ->from('PopularCategory p')->leftJoin('p.category o')
        ->where('o.deleted=0' )
        ->orderBy('p.position ASC')->fetchArray();

        return $data;

    }

    /**
     * add Category in Popular Category
     * @author Er.Kundal
     * @version 1.0
     * @return integer $flag
     */
    public static function addCategoryInPopulerCategory($title)
    {
        //find offer by title
        $title = addslashes($title);
        $catg = Doctrine_query::create()->from('Category')
        ->where('name=' . "'$title'")->limit(1)->fetchArray();
        $flag = '2';


        if (sizeof($catg) > 0) {

            //check offer exist or not
            $pc = Doctrine_Core::getTable('PopularCategory')
            ->findBy('categoryId', $catg[0]['id']);

            if (sizeof($pc) > 0) {

                } else {

                $flag = '1';
                //find last postion  from database
                $data = Doctrine_Query::create()->select('p.position')
                ->from('PopularCategory p')->orderBy('p.position DESC')
                ->limit(1)->fetchArray();
                if(sizeof($data) > 0){

                    $NewPos = $data[0]['position'];

                } else {

                    $NewPos = 1;
                }				//add new offer if not exist in datbase
                $pc = new PopularCategory();
                $pc->type = 'MN';
                $pc->categoryId = $catg[0]['id'];
                $pc->position = (intval($NewPos) + 1);
                $pc->save();
                $flag = $pc->toArray();
            }

        }

        //call cache function
        FrontEnd_Helper_viewHelper::clearCacheByKeyOrAll('10_popularCategories_list');
        return $flag;

    }


    /**
     * delete popular Category
     * @param integer $id
     * @param integer $position
     * @author Er.kundal
     * @version 1.0
     */
    public static function deletePopulerCategory($id, $position)
    {
        if ($id) {
            //delete popular code from list
            $pc = Doctrine_Query::create()->delete('PopularCategory')
            ->where('id=' . $id)->execute();
            //change position by 1 of each below element
            $q = Doctrine_Query::create()->update('PopularCategory p')
            ->set('p.position', 'p.position -1')
            ->where('p.position >' . $position)->execute();
            //call cache function
            FrontEnd_Helper_viewHelper::clearCacheByKeyOrAll('10_popularCategories_list');

            return true ;
        }

        return  false ;
    }


    /**
     * move up popular Category from list
     * @param integer $id
     * @param integer $position
     * @author Er.kundal
     * @version 1.0
     */
    public static function moveUpPopulerCategory($id, $position)
    {
        $pos = (intval($position) - 1);
        //find prev element from database based of current
        $PrevPc = Doctrine_Core::getTable('PopularCategory')
        ->findBy('position', $pos)->toArray();
        //change position of prev element with current
        //$flag =  1;
        if(count($PrevPc) > 0) {

            //$flag =2;
            $changePrevPc = Doctrine_Core::getTable('PopularCategory')
            ->find($PrevPc[0]['id']);
            $changePrevPc->position = $position;
            $changePrevPc->save();
            //change position of current element with postition + 1
            $pc = Doctrine_Core::getTable('PopularCategory')->find($id);
            $pc->position = $pos;
            $pc->save();

            //call cache function
            FrontEnd_Helper_viewHelper::clearCacheByKeyOrAll('10_popularCategories_list');

            return true ;
        }

        return false;
    }

    /**
     * move down popular Category from list
     * @param integer $id
     * @param integer $position
     * @author Er.kundal
     * @version 1.0
     */
    public static function moveDownPopulerCategory($id, $position)
    {
        $pos = (intval($position) + 1);
        //find next element from database based of current
        $PrevPc = Doctrine_Core::getTable('PopularCategory')
        ->findBy('position', $pos)->toArray();
        //change position of next element with current
        if(count($PrevPc) > 0) {

            $changePrevPc = Doctrine_Core::getTable('PopularCategory')
            ->find($PrevPc[0]['id']);
            $changePrevPc->position = $position;
            $changePrevPc->save();
            //change position of current element with postition - 1
            $pc = Doctrine_Core::getTable('PopularCategory')->find($id);
            $pc->position = $pos;
            $pc->save();

            //call cache function
            FrontEnd_Helper_viewHelper::clearCacheByKeyOrAll('10_popularCategories_list');
            return true ;
        }
        return false;
    }

    public static function saveCategoryOfferCount()
    {
        $popularCategoriesOffersCount= self::getPopularCategoriesOffersCount();
        if (!empty($popularCategoriesOffersCount)) {
            foreach ($popularCategoriesOffersCount as $popularCategoryOffersCount) {
                self::updateCategoryOffersCount($popularCategoryOffersCount);
            }
        }
        return true;
    }

    public static function getPopularCategoriesOffersCount()
    {
        $currentDateAndTime = date('Y-m-d 00:00:00');
        $popularCategories = Doctrine_Query::create()
        ->select('p.id, p.categoryid')
        ->from('PopularCategory p')
        ->addSelect(
            "(
            SELECT  count(*) FROM refOfferCategory roc LEFT JOIN roc.Offer off LEFT JOIN off.shop s  WHERE  
                off.deleted = 0 and s.deleted = 0 and roc.categoryId = p.categoryId and off.enddate >'"
            .$currentDateAndTime."' and off.discounttype='CD' and off.Visability!='MEM') as totalCoupons"
        )
        ->addSelect(
            "(SELECT count(off1.id) FROM refShopCategory roc1 LEFT JOIN roc1.shops s1 LEFT JOIN s1.offer off1  
                WHERE  s1.deleted = 0 and 
                s1.status = 1 and off1.deleted = 0 and roc1.categoryId = p.categoryId  
                and off1.enddate >'".$currentDateAndTime."' and off1.startdate < '".$currentDateAndTime."') 
                as totalOffers"
        )
        ->where('p.deleted = 0')
        ->orderBy("totalCoupons DESC")
        ->fetchArray();
        return $popularCategories;
    }

    public static function updateCategoryOffersCount ($popularCategoryOffersCount)
    {
        Doctrine_Query::create()->update('PopularCategory p')
            ->set('p.total_offers', $popularCategoryOffersCount['totalOffers'])
            ->set('p.total_coupons', $popularCategoryOffersCount['totalCoupons'])
            ->where('p.categoryid = ' . $popularCategoryOffersCount['categoryId'])
            ->execute();
        return true;
    }


/**********************	Start Front end home page *************************************/







}
