<?php

/**
 * ShopViewCount
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
class ShopViewCount extends BaseShopViewCount{
	
	/**
	 * get No Shops clickouts last seven days
	 * @author Raman
	 * @param integer $shopId 
	 * @return integer
	 * @version 1.0
	 */
	
	public static function getAmountClickoutOfShop($shopId){
	
		$format = 'Y-m-j H:i:s';
		$date = date($format);
		
		$offers = Offer::getTotalAmountOfOffersByShopId($shopId);
		$lastWeekOfferClicks = 0;
		// - 7 days from today
		$past7Days = date($format, strtotime('-7 day' . $date));
		
		if(!empty($offers)){
			$dataOffer = Doctrine_Query::create()
				->select("count(*) as amountclicks")
				->from('ViewCount v')
				->whereIn('v.offerId', $offers)
				->andWhere('v.onclick = 1')
				->andWhere('v.created_at BETWEEN "'.$past7Days.'" AND "'.$date.'"')
				->fetchOne(null, Doctrine::HYDRATE_ARRAY) ;
			
			if(!empty($dataOffer)){
					
				$lastWeekOfferClicks = $dataOffer['amountclicks'];
			} else {
				$lastWeekOfferClicks = 0;
			}
		}
		
		$data = Doctrine_Query::create()
			->select("count(*) as amountclicks")
			->from('ShopViewCount s')
			->where('s.deleted = 0')
			->where('s.shopid = '.$shopId)
			->andWhere('s.created_at BETWEEN "'.$past7Days.'" AND "'.$date.'"')
			->fetchOne(null, Doctrine::HYDRATE_ARRAY) ;
		if(!empty($data)){
			
			$lastWeekShopClicks = $data['amountclicks'];
		} else {
			$lastWeekShopClicks = 0;
		}
		$lastWeekClicks = $lastWeekOfferClicks + $lastWeekShopClicks;
		return $lastWeekClicks;
	}
	
	/**
	 * get total No. of Shops clickouts 
	 * @author Raman
	 * @param integer $shopId
	 * @return integer
	 * @version 1.0
	 */
	
	public static function getTotalAmountClicksOfShop($shopId){
	
		$format = 'Y-m-j H:i:s';
		$date = date($format);
		$offers = Offer::getTotalAmountOfOffersByShopId($shopId);
		
		$totalOfferClicks = 0;
		if(!empty($offers)){
			$dataOffer = Doctrine_Query::create()
				->select("count(*) as amountclicks")
				->from('ViewCount v')
				->whereIn('v.offerId', $offers)
				->andWhere('v.onclick = 1')
				->fetchOne(null, Doctrine::HYDRATE_ARRAY) ;
			
			if(!empty($dataOffer)){
			
				$totalOfferClicks = $dataOffer['amountclicks'];
			} else {
				$totalOfferClicks = 0;
			}
		}
		$data = Doctrine_Query::create()
		->select("count(*)")
		->from('ShopViewCount s')
		->where('s.deleted = 0')
		->andWhere('s.shopid = '.$shopId)
		->fetchOne(null, Doctrine::HYDRATE_ARRAY) ;
		$totalShopClicks = $data['count'];
		
		$totalClicks = $totalOfferClicks + $totalShopClicks;
		return $totalClicks;
	}
}