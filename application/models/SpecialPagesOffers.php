<?php

/**
 * SpecialPagesOffers
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */

class SpecialPagesOffers extends BaseSpecialPagesOffers
{
    public static function getSpecialPageOfferById($pageId)
    {
        $specialPageOffers = Doctrine_Query::create()
            ->select('p.id, p.pageId, p.offerId, o.title, p.position')
            ->from('SpecialPagesOffers p')
            ->leftJoin('p.offers o')
            ->where('p.pageId ='.$pageId)
            ->orderBy('p.position')
            ->fetchArray();
        return $specialPageOffers;
    }

    public static function addOfferInList($offerId, $pageId)
    {
        $offer = Doctrine_query::create()
            ->from('Offer')
            ->where('id=' . $offerId)->limit(1)
            ->fetchArray();
        $result = '0';
        if (sizeof($offer) > 0) {
            $specialPageOffer = Doctrine_query::create()
                ->from('SpecialPagesOffers')
                ->where('offerId=' . $offerId)
                ->andWhere('pageId=' .$pageId)
                ->limit(1)
                ->fetchArray();
            if (!empty($specialPageOffer)) {
                $result = '2';
            } else {
                $result = '1';
                $maxPosition = Doctrine_Query::create()
                    ->select('p.position')
                    ->from('SpecialPagesOffers p')
                    ->where('pageId=' .$pageId)
                    ->orderBy('p.position DESC')
                    ->limit(1)
                    ->fetchArray();
                if (!empty($maxPosition)) {
                    $newPosition = $maxPosition[0]['position'];
                } else {
                    $newPosition =  0 ;
                }
                $specialPageOffer = new SpecialPagesOffers();
                $specialPageOffer->offerId = $offerId;
                $specialPageOffer->pageId = $pageId;
                $specialPageOffer->position = (intval($newPosition) + 1);
                $specialPageOffer->save();
                $result  = array(
                    'id'=>$specialPageOffer->id,
                    'type'=>'MN',
                    'offerId'=>$offerId,
                    'position'=>(intval($newPosition) + 1),
                    'title'=>$offer[0]['title']
                );
            }
        }
        self::clearCacheOfSpecialPagesOffers($pageId);
        return $result;
    }


    public static function deleteCode($id, $position, $pageId)
    {
        if ($id) {
            $deleteCode = Doctrine_Query::create()
            ->delete('SpecialPagesOffers')
            ->where('id=' . $id)
            ->execute();
            $updatePosition = Doctrine_Query::create()
                ->update('SpecialPagesOffers p')
                ->set('p.position', 'p.position -1')
                ->where('p.position >' . $position)
                ->andWhere('p.pageId='. $pageId)
                ->execute();
            $newOffersList = Doctrine_Query::create()
                ->select('p.*')
                ->from('SpecialPagesOffers p')
                ->where('p.pageId='. $pageId)
                ->orderBy('p.position ASC')
                ->fetchArray();
            $newPosition = 1;
            foreach ($newOffersList as $newOffer) {
                $updateWithNewPosition = Doctrine_Query::create()
                    ->update('SpecialPagesOffers p')
                    ->set('position', $newPosition)
                    ->where('p.id = ?' , $newOffer['id']);
                $updateWithNewPosition->execute();
                $newPosition++;
            }
            self::clearCacheOfSpecialPagesOffers($pageId);
            return true ;
        }
        return false ;
    }

    public static function savePosition($offerIds, $pageId)
    {
        if (!empty($offerIds)) {
            $deleteCode = Doctrine_Query::create()
                ->delete('SpecialPagesOffers p')
                ->where('p.pageId=' . $pageId)
                ->execute();
            $offerIds = explode(',', $offerIds);
            $i = 1;
            foreach ($offerIds as $offerId) {
                $specialPageOffer = new SpecialPagesOffers();
                $specialPageOffer->offerId = $offerId;
                $specialPageOffer->pageId = $pageId;
                $specialPageOffer->position = $i;
                $specialPageOffer->save();
                $i++;
            }
        }
        self::clearCacheOfSpecialPagesOffers($pageId);
    }

    public static function clearCacheOfSpecialPagesOffers($id)
    {
        $key = 'error_specialPage'.$id.'_offers';
        FrontEnd_Helper_viewHelper::clearCacheByKeyOrAll($key);
        FrontEnd_Helper_viewHelper::clearCacheByKeyOrAll('all_specialPagesHome_list');
        FrontEnd_Helper_viewHelper::clearCacheByKeyOrAll('all_specialPages_count');
        FrontEnd_Helper_viewHelper::clearCacheByKeyOrAll('all_specialPages_list');
    }
}
