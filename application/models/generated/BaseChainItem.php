<?php
Doctrine_Manager::getInstance()->bindComponent('ChainItem', 'doctrine');

/**
 * BaseChainItem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $webisteId
 * @property string $chainId
 * @property string $shopName
 * @property string $permalink
 * @property integer $shopId
 * @property string $locale
 * @property Website $website
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseChainItem extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('chain_item');
        $this->hasColumn('id', 'integer', 11, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'comment' => 'PK',
             'length' => '11',
             ));
     
        $this->hasColumn('shopName', 'string', 255, array(
        		'type' => 'string',
        		'length' => '11',
        ));
        $this->hasColumn('permalink', 'string', 255, array(
        		'type' => 'string',
        		'length' => '255',
        ));
        $this->hasColumn('locale', 'string', 255, array(
        		'type' => 'string',
        		'length' => '255',
        ));
        
        $this->hasColumn('status', 'boolean', null, array(
        		'type' => 'boolean',
        		'default' => '1',
        ));
        $this->hasColumn('websiteId', 'integer', 11, array(
        		'type' => 'integer',
        		'length' => '11',
        ));
        $this->hasColumn('shopId', 'integer', 20, array(
        		'type' => 'integer',
        		'length' => '20',
        ));
        $this->hasColumn('chainId', 'integer', 11, array(
        		'type' => 'integer',
        		'length' => '11',
        ));
        
    }

    public function setUp()
    {
        parent::setUp();

        
        $this->hasOne('Website  as website', array(
        		'local' => 'websiteId',
        		'foreign' => 'id'));
        
        $this->hasOne('Chain  as chain', array(
        		'local' => 'chainId',
        		'foreign' => 'id'));
        
        $timestampable = new Doctrine_Template_Timestampable(array(
             'created' => 
             array(
              'name' => 'created_at',
             ),
             'updated' => 
             array(
              'name' => 'updated_at',
             ),
             ));
        
        $this->actAs($timestampable);
        
    }
}