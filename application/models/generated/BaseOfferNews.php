<?php
Doctrine_Manager::getInstance()->bindComponent('OfferNews', 'doctrine_site');

/**
 * BaseOfferNews
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property string $title
 * @property string $url
 * @property string $content
 * @property string $linkstatus
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##Er.kundal## <##rkumar@##>
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseOfferNews extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('offer_news');
        $this->hasColumn('id', 'integer', 20, array(
             'primary' => true,
             'type' => 'integer',
             'autoincrement' => true,
             'comment' => 'PK',
             'length' => '20',
             ));
        $this->hasColumn('shopId', 'integer', 20, array(
        		'type' => 'integer',
        		'comment' => 'shop id',
        		'length' => '20',
        ));
        $this->hasColumn('offerId', 'integer', 20, array(
        		'type' => 'integer',
        		'comment' => 'offer id',
        		'length' => '20',
        ));
        $this->hasColumn('title', 'string', 225, array(
             'type' => 'string',
             'length' => '225',
             ));
        $this->hasColumn('url', 'string', 225, array(
             'type' => 'string',
             'length' => '225',
             ));
        $this->hasColumn('content', 'string', 1024, array(
             'type' => 'string',
             'length' => '1024',
             ));
        $this->hasColumn('linkstatus', 'enum', null, array(
        		'type' => 'enum',
        		'values' =>
        		array(
        				0 => '0',
        				1 => '1',
        		),
         ));
        $this->hasColumn('startdate', 'timestamp', null, array(
             'type' => 'timestamp',
             ));
        
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Shop as shop', array(
        		'local' => 'shopId',
        		'foreign' => 'id'));
        $softdelete0 = new Doctrine_Template_SoftDelete(array(
        		'name' => 'deleted',
        		'type' => 'boolean'
        
        ));
       $timestampable0 = new Doctrine_Template_Timestampable(array(
             'created' => 
             array(
              'name' => 'created_at',
             ),
             'updated' => 
             array(
              'name' => 'updated_at',
             ),
             ));
        $this->actAs($softdelete0);
        $this->actAs($timestampable0);
    }
}