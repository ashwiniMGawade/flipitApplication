<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('RefArticleCategory', 'doctrine_site');

/**
 * BaseRefArticleCategory
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id
 * @property integer $articleid
 * @property integer $storeid
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property Shop $Shop
 * @property Articles $Articles
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseRefArticleCategory extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('ref_article_category');
        $this->hasColumn('id', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('articleid', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('relatedcategoryid', 'integer', 8, array(
             'type' => 'integer',
             'length' => 8,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('created_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('updated_at', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
       
        $this->hasOne('Articles as articles', array(
             'local' => 'articleid',
             'foreign' => 'id'));
        $this->hasOne('Category as category', array(
        		'local' => 'relatedcategoryid',
        		'foreign' => 'id'));
        
        $this->hasOne('Moneysaving as moneysaving', array(
        		'local' => 'relatedcategoryid',
        		'foreign' => 'categoryid'));
        
        $this->hasOne('Articlecategory as articlecategory', array(
        		'local' => 'relatedcategoryid',
        		'foreign' => 'id'));
        
        $timestampable0 = new Doctrine_Template_Timestampable(array(
        		'created' =>
        		array(
        				'name' => 'created_at',
        		),
        		'updated' =>
        		array(
        				'name' => 'updated_at',
        		),
        ));
        $this->actAs($timestampable0);
    }
}