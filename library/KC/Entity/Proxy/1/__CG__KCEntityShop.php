<?php

namespace KC\Entity\Proxy\__CG__\KC\Entity;

/**
 * THIS CLASS WAS GENERATED BY THE DOCTRINE ORM. DO NOT EDIT THIS FILE.
 */
class Shop extends \KC\Entity\Shop implements \Doctrine\ORM\Proxy\Proxy
{
    private $_entityPersister;
    private $_identifier;
    public $__isInitialized__ = false;
    public function __construct($entityPersister, $identifier)
    {
        $this->_entityPersister = $entityPersister;
        $this->_identifier = $identifier;
    }
    /** @private */
    public function __load()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;

            if (method_exists($this, "__wakeup")) {
                // call this after __isInitialized__to avoid infinite recursion
                // but before loading to emulate what ClassMetadata::newInstance()
                // provides.
                $this->__wakeup();
            }

            if ($this->_entityPersister->load($this->_identifier, $this) === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            unset($this->_entityPersister, $this->_identifier);
        }
    }

    /** @private */
    public function __isInitialized()
    {
        return $this->__isInitialized__;
    }

    

    public function __sleep()
    {
        return array('__isInitialized__', 'id', 'name', 'permalink', 'metadescription', 'usergenratedcontent', 'notes', 'deeplink', 'deeplinkstatus', 'refurl', 'actualurl', 'affliateprogram', 'title', 'subTitle', 'overritetitle', 'overritesubtitle', 'overritebrowsertitle', 'shoptext', 'views', 'howtouse', 'Deliverytime', 'returnPolicy', 'freeDelivery', 'deliveryCost', 'status', 'offlinesicne', 'accoutmanagerid', 'accountManagerName', 'contentmanagerid', 'contentManagerName', 'screenshotid', 'keywordlink', 'deleted', 'created_at', 'updated_at', 'howtoTitle', 'howtoSubtitle', 'howtoMetaTitle', 'howtoMetaDescription', 'ideal', 'qShops', 'freeReturns', 'pickupPoints', 'mobileShop', 'service', 'serviceNumber', 'discussions', 'displayExtraProperties', 'showsignupoption', 'addtosearch', 'customheader', 'totalviewcount', 'showSimliarShops', 'showchains', 'chainItemId', 'chainId', 'strictconfirmation', 'howToIntroductionText', 'brandingcss', 'adminfevoriteshops', 'conversions', 'offer', 'offerNews', 'popularshop', 'articlestore', 'categoryshops', 'relatedshops', 'howtochapter', 'viewcount', 'shop', 'affliatenetwork', 'shops', 'shopPage', 'shopimage', 'shoplogo', 'visitors', 'keywords');
    }

    public function __clone()
    {
        if (!$this->__isInitialized__ && $this->_entityPersister) {
            $this->__isInitialized__ = true;
            $class = $this->_entityPersister->getClassMetadata();
            $original = $this->_entityPersister->load($this->_identifier);
            if ($original === null) {
                throw new \Doctrine\ORM\EntityNotFoundException();
            }
            foreach ($class->reflFields as $field => $reflProperty) {
                $reflProperty->setValue($this, $reflProperty->getValue($original));
            }
            unset($this->_entityPersister, $this->_identifier);
        }
        
    }
}