<?php

/**
 * ViewCount
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
class ArticleViewCount extends BaseArticleViewCount
{

    ##########################################
    ########### REFACTORED CODE ##############
    ##########################################
    public static function getArticleClick($articleId, $clientIp)
    {
        $articleClick = Doctrine_Query::create()
            ->select('count(*) as exists')
            ->from('ArticleViewCount')
            ->where('deleted=0')
            ->andWhere('onclick!=0')
            ->andWhere('articleid="'.$articleId.'"')
            ->andWhere('ip="'.$clientIp.'"')
            ->fetchArray();
        return $articleClick[0]['exists'];
    }

    public static function saveArticleClick($articleId, $clientIp)
    {
        $articleViewCount  = new ArticleViewCount();
        $articleViewCount->articleid = $articleId;
        $articleViewCount->onclick = 1;
        $articleViewCount->ip = $clientIp;
        $articleViewCount->onload = 0;
        $articleViewCount->save();
        return true;
    }

    public static function getArticleOnload($articleId, $clientIp)
    {
        $articleOnLoad = Doctrine_Query::create()
            ->select('count(*) as exists')
            ->from('ArticleViewCount')
            ->where('deleted=0')
            ->andWhere('onload!=0')
            ->andWhere('articleid="'.$articleId.'"')
            ->andWhere('ip="'.$clientIp.'"')
            ->fetchArray();
        return $articleOnLoad[0]['exists'];
    }

    public static function saveArticleOnLoad($articleId, $clientIp)
    {
        $articleViewCount  = new ArticleViewCount();
        $articleViewCount->articleid = $articleId;
        $articleViewCount->onload = 1;
        $articleViewCount->ip = $clientIp;
        $articleViewCount->onclick = 0;
        $articleViewCount->save();
        return true;
    }

    ##########################################
    ########### END REFACTORED CODE ##########
    ##########################################

    /**
     * generate papular Articles at the moment by formula
     * @author Raman
     * @version 1.0
     */
    public static function generatePopularArticle($limit)
    {
        $format = 'Y-m-j H:m:s';
        $date = date($format);
        // - 4 days from today
        $past4Days = date($format, strtotime('-4 day' . $date));
        $nowDate = $date;
        $papularArticle = Doctrine_Query::create()->select('av.id, av.articleid, ((sum(av.onclick)) / (DATEDIFF(NOW(),a.publishdate))) as pop, a.publishdate')
        ->from('ArticleViewCount av')
        ->leftJoin('av.articles a')
        ->where('av.updated_at <=' . "'$nowDate' AND av.updated_at >="."'$past4Days'")
        ->groupBy('av.articleid')
        ->orderBy('pop DESC')
        ->limit($limit)
        ->fetchArray();

        return $papularArticle;

    }


}
