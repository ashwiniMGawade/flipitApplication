<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('RefExcludedkeywordShop', 'doctrine_site');

/**
 * BaseRefExcludedkeywordShop
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 *
 * @property integer $id
 * @property integer $keywordid
 * @property string $keywordname
 * @property integer $shopid
 * @property integer $deleted
 * @property timestamp $created_at
 * @property timestamp $updated_at
 * @property Shop $Shop
 * @property ExcludedKeyword $ExcludedKeyword
 *
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7691 2011-02-04 15:43:29Z jwage $
 */
abstract class BaseRefExcludedkeywordShop extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('ref_excludedkeyword_shop');
        $this->hasColumn('id', 'integer', 11, array(
             'type' => 'integer',
             'length' => 11,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('keywordid', 'integer', 11, array(
             'type' => 'integer',

             ));
        $this->hasColumn('keywordname', 'string', 256, array(
             'type' => 'string',

             ));
        $this->hasColumn('shopid', 'integer', 11, array(
             'type' => 'integer',

             ));
        $this->hasColumn('deleted', 'integer', 1, array(
             'type' => 'integer',

             ));
        $this->hasColumn('created_at', 'timestamp', null, array(
             'type' => 'timestamp',

             ));
        $this->hasColumn('updated_at', 'timestamp', null, array(
             'type' => 'timestamp',

             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Shop as shopsofKeyword', array(
             'local' => 'shopid',
             'foreign' => 'id'));

        $this->hasMany('ExcludedKeyword as keywords', array(
             'local' => 'keywordid',
             'foreign' => 'id'));
     }
}
